import departments from '../../../../../../fixtures/departments.json'
import arDashboardPage from '../../../../../../../helpers/AR/pageObjects/Dashboard/ARDashboardPage'
import arEnrollUsersPage from '../../../../../../../helpers/AR/pageObjects/User/AREnrollUsersPage'
import a5EnrollmentHistoryPage from '../../../../../../../helpers/AR/pageObjects/Enrollment/A5EnrollmentHistoryPage'
import arUserPage from '../../../../../../../helpers/AR/pageObjects/User/ARUserPage'
import arUserAddEditPage from '../../../../../../../helpers/AR/pageObjects/User/ARUserAddEditPage'
import arSelectModal from '../../../../../../../helpers/AR/pageObjects/Modals/ARSelectModal'
import arUserEnrollmentPage from '../../../../../../../helpers/AR/pageObjects/User/ARUserEnrollmentPage'
import arUserReEnrollModal from '../../../../../../../helpers/AR/pageObjects/Modals/ARUserReEnrollModal'
import { courses } from '../../../../../../../helpers/TestData/Courses/courses'
import { users } from '../../../../../../../helpers/TestData/users/users'
import { userDetails } from '../../../../../../../helpers/TestData/users/UserDetails'
import { commonDetails } from '../../../../../../../helpers/TestData/Courses/commonDetails'


describe('AR - Regress - RP - User (Create and Edit) - DEPT Admin', function () {

    it('An Is Only admin can create a new user (Learner) without error', () => {
        cy.loginAdmin(users.depAdminDEPTB.admin_dep_username, users.depAdminDEPTB.admin_dep_password)
        cy.get(arDashboardPage.getAdminDashboardPageTitle()).should('contain.text', arDashboardPage.getAdminDashboardPageTitleTxt())
        cy.get(arDashboardPage.getCurrentUserLabel()).contains(`${users.depAdminDEPTB.admin_dep_fname} ${users.depAdminDEPTB.admin_dep_lname}`)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.get(arUserPage.getAddEditMenuActionsByName('Add User')).click()
        cy.get(arUserAddEditPage.getFirstNameTxtF()).clear().type(userDetails.firstName)
        cy.get(arUserAddEditPage.getLastNameTxtF()).clear().type(userDetails.lastName)
        cy.get(arUserAddEditPage.getEmailAddressTxtF()).type(`qa.guiauto1@absorblms.com`)
        cy.get(arUserAddEditPage.getUsernameTxtF()).clear().type(userDetails.rpDeptBLearnerUserName)
        cy.get(arUserAddEditPage.getPasswordTxtF()).clear().type(userDetails.validPassword)
        cy.get(arUserAddEditPage.getConfirmPasswordTxtF()).clear().type(userDetails.validPassword)
        cy.get(arUserAddEditPage.getDepartmentTxtF()).click()
        arSelectModal.SearchAndSelectFunction([departments.DEPTB_NAME])
        cy.get(arUserAddEditPage.getElementByDataNameAttribute(arUserAddEditPage.getLearnerToggleContainer()) + ' ' + arUserAddEditPage.getToggleEnabled()).should('contain.text', 'On')
        cy.get(arUserAddEditPage.getSaveBtn()).click().click().wait('@getUser')
        cy.get(arUserPage.getToastSuccessMsg()).should('contain', 'User has been created successfully.')

    })

    it('An Is Only admin can edit a user (Learner) without error', () => {
        cy.loginAdmin(users.depAdminDEPTB.admin_dep_username, users.depAdminDEPTB.admin_dep_password)
        cy.get(arDashboardPage.getAdminDashboardPageTitle()).should('contain.text', arDashboardPage.getAdminDashboardPageTitleTxt())
        cy.get(arDashboardPage.getCurrentUserLabel()).contains(`${users.depAdminDEPTB.admin_dep_fname} ${users.depAdminDEPTB.admin_dep_lname}`)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.wrap(arUserPage.AddFilter('Username', 'Contains', userDetails.rpDeptBLearnerUserName))
        arUserPage.getLShortWait()
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName).click()
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserPage.getAddEditMenuActionsByName('Edit User'), 1000))
        cy.get(arUserPage.getAddEditMenuActionsByName('Edit User')).click()
        cy.intercept('/api/rest/v2/admin/reports/departments').as('getUser').wait('@getUser')
        cy.get(arUserAddEditPage.getUsernameTxtF()).should('have.value', userDetails.rpDeptBLearnerUserName)
        cy.get(arUserAddEditPage.getUsernameTxtF()).click().focused().clear().should('have.value', '').type(userDetails.rpDeptBLearnerUserName + commonDetails.appendText)
        cy.url().then((currentUrl) => { userDetails.userID = currentUrl.slice(48) })
        cy.wrap(arUserAddEditPage.WaitForElementStateToChange(arUserAddEditPage.getSaveBtn(), 1000))
        cy.get(arUserAddEditPage.getSaveBtn()).click()
        cy.get(arUserPage.getToastSuccessMsg()).should('contain', 'User has been updated successfully.')
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName + commonDetails.appendText)
    })

    it('Sign in as System Admin and enroll DEPTB Learner in a DEPTB course', () => {
        cy.loginAdmin(users.sysAdmin.admin_sys_01_username, users.sysAdmin.admin_sys_01_password)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.wrap(arUserPage.AddFilter('Username', 'Contains', userDetails.rpDeptBLearnerUserName + commonDetails.appendText))
        arUserPage.getLShortWait()
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName + commonDetails.appendText).click()
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserPage.getAddEditMenuActionsByName('Enroll User'), 1000))
        cy.get(arUserPage.getAddEditMenuActionsByName('Enroll User')).click()
        cy.get(arUserPage.getElementByDataNameAttribute(arEnrollUsersPage.getEnrollUsersAddCourseBtn())).click()
        arSelectModal.SearchAndSelectFunction([courses.deptB_rp_oc])
        cy.wrap(arUserAddEditPage.WaitForElementStateToChange(arUserAddEditPage.getSaveBtn(), arUserAddEditPage.getShortWait()))
        cy.get(arUserAddEditPage.getSaveBtn()).click()
        cy.get(arUserPage.getToastSuccessMsg()).should('contain', 'User has been enrolled.')
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName + commonDetails.appendText)
    })

    it('Sign in as System Admin and re-enroll DEPTB Learner in a DEPTB course', () => {
        cy.loginAdmin(users.sysAdmin.admin_sys_01_username, users.sysAdmin.admin_sys_01_password)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.wrap(arUserPage.AddFilter('Username', 'Contains', userDetails.rpDeptBLearnerUserName + commonDetails.appendText))
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName + commonDetails.appendText).click()
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserPage.getAddEditMenuActionsByName('View Enrollments'), 1000))
        cy.get(arUserPage.getAddEditMenuActionsByName('View Enrollments')).click()
        cy.intercept('/api/rest/v2/admin/reports/user-enrollments/operations').as('getEnrollments').wait('@getEnrollments').wrap(arUserPage.getShortWait())
        cy.wrap(arUserPage.AddFilter('Name', 'Contains', courses.deptB_rp_oc))
        arUserPage.getLShortWait()
        cy.get(arUserPage.getTableCellName(2)).should('have.text', courses.deptB_rp_oc).click()
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserEnrollmentPage.getAddEditMenuActionsByName('Re-enroll User'), 1000))
        cy.get(arUserEnrollmentPage.getAddEditMenuActionsByName('Re-enroll User')).click()
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserReEnrollModal.getElementByDataNameAttribute(arUserReEnrollModal.getOKBtn()), arUserReEnrollModal.getMediumWait()))
        cy.get(arUserReEnrollModal.getElementByDataNameAttribute(arUserReEnrollModal.getOKBtn())).click()
        cy.get(arUserPage.getToastSuccessMsg()).should('contain', 'User has been re-enrolled.')
        
    })

    it('View Enrollment for the user', () => {
        cy.loginAdmin(users.sysAdmin.admin_sys_01_username, users.sysAdmin.admin_sys_01_password)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.wrap(arUserPage.AddFilter('Username', 'Contains', userDetails.rpDeptBLearnerUserName + commonDetails.appendText))
        arUserPage.getLShortWait()
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName + commonDetails.appendText).click()
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserPage.getAddEditMenuActionsByName('View Enrollments'), 1000))
        cy.get(arUserPage.getAddEditMenuActionsByName('View Enrollments')).click()
        cy.intercept('/api/rest/v2/admin/reports/user-enrollments/operations').as('getEnrollments').wait('@getEnrollments').wrap(arUserPage.getShortWait())
        cy.wrap(arUserPage.AddFilter('Name', 'Contains', courses.deptB_rp_oc))
        cy.get(arUserPage.getTableCellName()).should('have.text', courses.deptB_rp_oc).should('be.visible').click()
        cy.intercept('/api/rest/v2/admin/reports/user-enrollments/operations').as('getEnrollments').wait('@getEnrollments')
    })

    it('View Historic and Enrollment History for the user', () => {
        cy.loginAdmin(users.sysAdmin.admin_sys_01_username, users.sysAdmin.admin_sys_01_password)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.wrap(arUserPage.AddFilter('Username', 'Contains', userDetails.rpDeptBLearnerUserName + commonDetails.appendText))
        arUserPage.getLShortWait()
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName + commonDetails.appendText).should('be.visible').click()
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserPage.getAddEditMenuActionsByName('View Enrollments'), 1000))
        cy.get(arUserPage.getAddEditMenuActionsByName('View Enrollments')).click()
        cy.intercept('/api/rest/v2/admin/reports/user-enrollments/operations').as('getEnrollments').wait('@getEnrollments').wrap(arUserPage.getShortWait())
        cy.wrap(arUserPage.AddFilter('Name', 'Contains', courses.deptB_rp_oc))
        cy.get(arUserPage.getTableCellName()).should('have.text', courses.deptB_rp_oc).click()
        cy.intercept('/api/rest/v2/admin/reports/user-enrollments/operations').as('getEnrollments').wait('@getEnrollments')
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserEnrollmentPage.getAddEditMenuActionsByName('View Historic Enrollments'), 1000))
        cy.get(arUserPage.getAddEditMenuActionsByName('View Historic Enrollments')).click()
        cy.intercept('/Admin/OnlineCourseActivity/GetHistory').as('getHistory').wait('@getHistory')
        a5EnrollmentHistoryPage.getMediumWait()
        cy.get(a5EnrollmentHistoryPage.getTableCellContentByIndex()).should('have.text', courses.deptB_rp_oc)
        cy.deleteUser(userDetails.userID)
    })

    it('An Is Only DEPT admin cannot create a new admin user', () => {
        cy.loginAdmin(users.depAdminDEPTB.admin_dep_username, users.depAdminDEPTB.admin_dep_password)
        cy.get(arDashboardPage.getAdminDashboardPageTitle()).should('contain.text', arDashboardPage.getAdminDashboardPageTitleTxt())
        cy.get(arDashboardPage.getCurrentUserLabel()).contains(`${users.depAdminDEPTB.admin_dep_fname} ${users.depAdminDEPTB.admin_dep_lname}`)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.get(arUserPage.getAddEditMenuActionsByName('Add User')).click()
        cy.get(arUserAddEditPage.getElementByDataNameAttribute(arUserAddEditPage.getAdminToggleContainer())).should('not.exist')
    })

    it('An Include Subdep admin can create a new user (Learner) without error', () => {
        cy.loginAdmin(users.depAdminSUBDEP.admin_dep_username, users.depAdminSUBDEP.admin_dep_password)
        cy.get(arDashboardPage.getAdminDashboardPageTitle()).should('contain.text', arDashboardPage.getAdminDashboardPageTitleTxt())
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.get(arUserPage.getAddEditMenuActionsByName('Add User')).click()
        cy.get(arUserAddEditPage.getFirstNameTxtF()).clear().type(userDetails.firstName)
        cy.get(arUserAddEditPage.getLastNameTxtF()).clear().type(userDetails.lastName)
        cy.get(arUserAddEditPage.getEmailAddressTxtF()).type(`qa.guiauto1@absorblms.com`)
        cy.get(arUserAddEditPage.getUsernameTxtF()).clear().type(userDetails.rpDeptBLearnerUserName)
        cy.get(arUserAddEditPage.getPasswordTxtF()).clear().type(userDetails.validPassword)
        cy.get(arUserAddEditPage.getConfirmPasswordTxtF()).clear().type(userDetails.validPassword)
        cy.get(arUserAddEditPage.getDepartmentTxtF()).click()
        arSelectModal.SelectFunction(departments.SUB_DEPT_B_NAME)
        cy.get(arUserAddEditPage.getElementByDataNameAttribute(arUserAddEditPage.getLearnerToggleContainer()) + ' ' + arUserAddEditPage.getToggleEnabled()).should('contain.text', 'On')
        arUserAddEditPage.getMediumWait()
        cy.get(arUserAddEditPage.getSaveBtn()).click()
        cy.get(arUserPage.getToastSuccessMsg()).should('contain', 'User has been created successfully.')
    })

    it('An Include Subdep admin can edit a user (Learner) without error', () => {
        cy.loginAdmin(users.depAdminSUBDEP.admin_dep_username, users.depAdminSUBDEP.admin_dep_password)
        cy.get(arDashboardPage.getAdminDashboardPageTitle()).should('contain.text', arDashboardPage.getAdminDashboardPageTitleTxt())
        cy.get(arDashboardPage.getCurrentUserLabel()).contains(`${users.depAdminSUBDEP.admin_dep_fname} ${users.depAdminSUBDEP.admin_dep_lname}`)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        arUserPage.getLShortWait()
        cy.wrap(arUserPage.AddFilter('Username', 'Contains', userDetails.rpDeptBLearnerUserName))
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName).click()
        cy.wrap(arUserPage.WaitForElementStateToChange(arUserPage.getAddEditMenuActionsByName('Edit User'), 1000))
        cy.get(arUserPage.getAddEditMenuActionsByName('Edit User')).click()
        cy.intercept('/api/rest/v2/admin/reports/departments').as('getDepartments').wait('@getDepartments')
        cy.get(arUserAddEditPage.getUsernameTxtF()).should('have.value', userDetails.rpDeptBLearnerUserName)
        cy.get(arUserAddEditPage.getUsernameTxtF()).clear().type(userDetails.rpDeptBLearnerUserName + commonDetails.appendText)
        cy.url().then((currentUrl) => { userDetails.userID = currentUrl.slice(48) })
        cy.wrap(arUserAddEditPage.WaitForElementStateToChange(arUserAddEditPage.getSaveBtn(), 1000))
        cy.get(arUserAddEditPage.getSaveBtn()).click()
        cy.get(arUserPage.getToastSuccessMsg()).should('contain', 'User has been updated successfully.')
        cy.get(arUserPage.getTableCellName(4)).should('have.text', userDetails.rpDeptBLearnerUserName + commonDetails.appendText)
    })

    it('An Include Subdep admin cannot create a new Admin user', () => {
        cy.deleteUser(userDetails.userID)
        cy.loginAdmin(users.depAdminSUBDEP.admin_dep_username, users.depAdminSUBDEP.admin_dep_password)
        cy.get(arDashboardPage.getAdminDashboardPageTitle()).should('contain.text', arDashboardPage.getAdminDashboardPageTitleTxt())
        cy.get(arDashboardPage.getCurrentUserLabel()).contains(`${users.depAdminSUBDEP.admin_dep_fname} ${users.depAdminSUBDEP.admin_dep_lname}`)
        cy.get(arDashboardPage.getElementByAriaLabelAttribute(arDashboardPage.getARLeftMenuByLabel('Users'))).click()
        cy.wrap(arDashboardPage.getMenuItemOptionByName('Users'))
        cy.intercept('**/users/operations').as('getUser').wait('@getUser')
        cy.get(arUserPage.getAddEditMenuActionsByName('Add User')).click()
        cy.get(arUserAddEditPage.getElementByDataNameAttribute(arUserAddEditPage.getAdminToggleContainer())).should('not.exist')
    })
})
